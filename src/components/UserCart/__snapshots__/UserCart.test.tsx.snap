// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserCart /> should match the snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  -webkit-animation: slideLeft 500ms ease-in;
  animation: slideLeft 500ms ease-in;
  display: grid;
  gap: 1rem;
  grid-template-columns: 4rem 1fr 10rem 1rem;
  height: 5rem;
  background-color: #FAFAFA;
  padding: 0.5rem;
  border-radius: 8px;
}

.c1 p {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c1 .price-tag {
  margin-left: auto;
}

.c1 button {
  background-color: transparent;
  border: none;
  cursor: pointer;
  font-size: 0;
}

.c1 button:hover,
.c1 button:focus {
  opacity: 0.5;
}

.c0 {
  display: grid;
  grid-template-rows: 2rem 1fr 3rem 5rem;
  gap: 1rem;
  padding: 1rem;
  background-color: pink;
  border: 2px solid darkred;
  position: fixed;
  inset: 6rem 1rem 1rem 1rem;
  -webkit-transition: opacity 500ms;
  transition: opacity 500ms;
  z-index: 100;
  border-radius: 8px;
}

.c0 h3 {
  text-align: center;
}

.c0 ul {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.5rem;
  overflow-y: auto;
  overflow-x: hidden;
}

.c2 {
  border-radius: inherit;
  border: none;
  cursor: pointer;
}

.c2:hover,
.c2:focus {
  background-color: darkred;
  color: white;
}

@media (max-width:1000px) {

}

@media (min-width:1000px) {
  .c0 {
    right: 1rem;
    left: initial;
    width: 30rem;
  }
}

<body>
    <div>
      <aside
        class="c0"
      >
        <h3>
          Carrinho
        </h3>
        <ul>
          <li
            class="c1"
            data-testid="cart-item"
          >
            <img
              alt="Imagem do produto"
              src="img"
            />
            <p>
              testProduct
            </p>
            <p
              class="price-tag"
            >
              R$ 20
            </p>
            <button
              aria-label="Remover item do carrinho"
              type="button"
            >
              <img
                alt="X"
                src="/images/x-icon.svg"
              />
            </button>
          </li>
        </ul>
        <p>
          Total: R$ 
          20.00
        </p>
        <button
          class="c2"
          type="button"
        >
          Finalizar
        </button>
      </aside>
    </div>
  </body>,
  "container": <div>
    <aside
      class="UserCart__UserCartWrapper-sc-dz0mse-0 gmdhmN"
    >
      <h3>
        Carrinho
      </h3>
      <ul>
        <li
          class="CartItem__CartItemWrapper-sc-13akc3r-0 dMWAEM"
          data-testid="cart-item"
        >
          <img
            alt="Imagem do produto"
            src="img"
          />
          <p>
            testProduct
          </p>
          <p
            class="price-tag"
          >
            R$ 20
          </p>
          <button
            aria-label="Remover item do carrinho"
            type="button"
          >
            <img
              alt="X"
              src="/images/x-icon.svg"
            />
          </button>
        </li>
      </ul>
      <p>
        Total: R$ 
        20.00
      </p>
      <button
        class="UserCart__CheckoutButton-sc-dz0mse-1 jVchXm"
        type="button"
      >
        Finalizar
      </button>
    </aside>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
